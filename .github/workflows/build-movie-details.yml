name: Build Movie Details & Indexes

on:
  workflow_dispatch:
    inputs:
      year_start:
        description: '시작 연도 (YYYY)'
        required: true
        type: string
      year_end:
        description: '끝 연도 (YYYY, 포함)'
        required: true
        type: string
      max_count:
        description: '최대 작업 개수 (테스트용, 비워두면 전체)'
        required: false
        default: "999999"
        type: string
      only_index:
        description: '상세 수집 건너뛰고 인덱스만 빌드'
        required: false
        default: "false"
        type: choice
        options: ["false","true"]
      audiacc_mode:
        description: 'audiAcc(누적 관객수) 선계산 모드'
        required: false
        default: "off"
        type: choice
        options: ["off","recent","all"]
      audiacc_days:
        description: 'recent 모드일 때 기준 일수 (예: 90)'
        required: false
        default: "90"
        type: string

permissions:
  contents: write

concurrency:
  group: build-caches-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Build movie details (optional)
        if: ${{ inputs.only_index != 'true' }}
        env:
          KOFIC_API_KEY: ${{ secrets.KOFIC_API_KEY }}
        run: |
          python scripts/build_movie_details.py \
            --year-start "${{ inputs.year_start }}" \
            --year-end   "${{ inputs.year_end }}" \
            --max        "${{ inputs.max_count }}" \
            --audiacc    "${{ inputs.audiacc_mode }}" \
            --audiacc-days "${{ inputs.audiacc_days }}"

      - name: Build search & people indexes
        run: |
          python scripts/build_indices.py

      - name: Commit caches
        env:
          BRANCH: ${{ github.ref_name }}
        run: |
          set -eux
          git config user.name  "actions-user"
          git config user.email "actions@github.com"
          git add docs/data
          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "Build caches: $GITHUB_RUN_ID"
          git fetch origin "$BRANCH"
          git pull --rebase origin "$BRANCH" || true
          git push origin "HEAD:$BRANCH" || git push --force-with-lease origin "HEAD:$BRANCH"
