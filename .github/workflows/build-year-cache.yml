name: Build Year Cache

on:
  workflow_dispatch:
    inputs:
      year_start:
        description: '시작 연도 (YYYY)'
        required: true
        type: string
      year_end:
        description: '끝 연도 (YYYY, 포함)'
        required: true
        type: string

permissions:
  contents: write

concurrency:
  group: build-year-cache-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests
          sudo apt-get update && sudo apt-get install -y jq

      # 선택적 진단 단계: 키/쿼터/HTTP 상태 빠르게 확인
      - name: Probe KOFIC (one small request)
        env:
          KOFIC_API_KEY: ${{ secrets.KOFIC_API_KEY }}
        run: |
          set -e
          url="https://www.kobis.or.kr/kobisopenapi/webservice/rest/movie/searchMovieList.json?key=$KOFIC_API_KEY&openStartDt=2024&openEndDt=2024&itemPerPage=1&curPage=1"
          code=$(curl -s -o resp.json -w "%{http_code}" "$url")
          echo "HTTP=$code"
          jq '.faultInfo // .faultResult // .movieListResult.totCnt' resp.json || true

      - name: Build year cache
        env:
          KOFIC_API_KEY: ${{ secrets.KOFIC_API_KEY }}
        run: |
          python scripts/build_year_cache.py \
            --year-start "${{ inputs.year_start }}" \
            --year-end   "${{ inputs.year_end }}"

      - name: Commit year files
        run: |
          git config user.name  "actions-user"
          git config user.email "actions@github.com"
          git add docs/data/years
          if git diff --staged --quiet; then
            echo "No changes."; exit 0
          fi
          git commit -m "Build year cache ${{ inputs.year_start }}-${{ inputs.year_end }}"
          git fetch origin ${{ github.ref_name }}
          git pull --rebase origin ${{ github.ref_name }} || true
          git push || git push --force-with-lease
