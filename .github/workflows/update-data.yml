name: KOFIC Daily Fetch

on:
  schedule:
    # [수정] 한국 시간 기준 매일 오전 9시 10분에 실행 (UTC 00:10)
    # KOFIC 데이터가 보통 새벽 늦게 집계 완료되므로, 오전 시간으로 변경하는 것이 더 안정적입니다.
    - cron: "10 0 * * *"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: kofic-daily
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # [추가] 가장 중요한 단계: 어제 날짜의 박스오피스를 KOFIC에서 직접 다운로드
      - name: Fetch KOFIC Daily Box Office
        env:
          KOFIC_API_KEY: ${{ secrets.KOFIC_API_KEY }}
        run: |
          # 한국 시간 기준으로 어제 날짜를 YYYYMMDD 형식으로 계산
          TARGET_DT=$(TZ=Asia/Seoul date -d "yesterday" +%Y%m%d)
          echo "Fetching data for $TARGET_DT"
          
          # KOFIC API를 호출하여 결과를 파일로 저장
          curl -s "http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${KOFIC_API_KEY}&targetDt=${TARGET_DT}" > docs/data/${TARGET_DT}.json
          
          # [추가] 다운로드한 파일을 latest.json에도 복사하여 박스오피스 UI가 즉시 갱신되도록 함
          cp docs/data/${TARGET_DT}.json docs/data/latest.json
          
          echo "Daily box office data for $TARGET_DT saved."

      - name: Update movie details from new daily file
        env:
          KOFIC_API_KEY: ${{ secrets.KOFIC_API_KEY }}
        run: |
          # 이제 update_data.py는 위에서 생성된 최신 파일을 읽어서 처리함
          python scripts/update_data.py

      - name: Light refresh current-year details
        env:
          KOFIC_API_KEY: ${{ secrets.KOFIC_API_KEY }}
        run: |
          YEAR=$(TZ=Asia/Seoul date +%Y)
          python scripts/build_movie_details.py \
            --year-start "$YEAR" \
            --year-end   "$YEAR" \
            --max        "300"

      - name: Rebuild search indexes
        run: |
          python scripts/build_indices.py

      - name: Commit updated data
        env:
          BRANCH: ${{ github.ref_name }}
        run: |
          set -eux
          git config user.name  "github-actions"
          git config user.email "actions@github.com"
          git add docs/data/
          # 변경 사항이 있을 때만 커밋 및 푸시
          if git diff --staged --quiet; then
            echo "No new data to commit."
            exit 0
          fi
          git commit -m "KOFIC: Daily data update"
          git push origin "HEAD:$BRANCH"
